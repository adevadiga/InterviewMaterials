package com.cci.questions.linkedlist;

public class NthNodeFromEndOfLinkedList {

	public void nthNodeFromLastMethod1(Node head, int n){
		int len = 0;
		Node temp = head;
		while(temp !=null){
			temp = temp.next;
			len++;
		}
		temp =head;
		
		for(int i=1; i<len-n+1;i++){
			temp = temp.next;
		}
		//temp is needed node
		System.out.println(temp.data);
	}
	
	public void nthNodeRecursion(Node head, int n, int len){
		if(head == null){
			return;
		}
		nthNodeRecursion(head.next, n, len);
		if(++len == n){
			System.out.println(head.data);
			return;
		}
	}
	
	public void effeicient(Node head, int n){
		if(head == null || n<1){
			return null;
		}
	}
}
